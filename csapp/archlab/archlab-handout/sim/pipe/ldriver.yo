                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f40805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f68802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f77800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | # 	xorq %rax,%rax		# count = 0;
                            | # 	andq %rdx,%rdx		# len <= 0?
                            | # 	jle Done		# if so, goto Done:
                            | 
                            | # Loop:	
                            | # 	mrmovq (%rdi), %r10	# read val from src...
                            | # 	rmmovq %r10, (%rsi)	# ...and store it to dst
                            | # 	andq %r10, %r10		# val <= 0?
                            | # 	jle Npos		# if so, goto Npos:
                            | # 	irmovq $1, %r10
                            | # 	addq %r10, %rax		# count++
                            | # Npos:	
                            | # 	irmovq $1, %r10
                            | # 	subq %r10, %rdx		# len--
                            | # 	irmovq $8, %r10
                            | # 	addq %r10, %rdi		# src++
                            | # 	addq %r10, %rsi		# dst++
                            | # 	andq %rdx,%rdx		# len > 0?
                            | # 	jg Loop			# if so, goto Loop:
                            | 
0x032: 6300                 |     xorq %rax, %rax
0x034: 2021                 |     rrmovq %rdx, %rcx
0x036: 6222                 |     andq %rdx, %rdx
0x038: 30f20100000000000000 |     irmovq $1, %rdx
0x042: 30f80800000000000000 |     irmovq $8, %r8
0x04c:                      | loop:
0x04c: 6333                 |     xorq %rbx, %rbx
0x04e: 50370000000000000000 |     mrmovq (%rdi), %rbx
                            | 	
0x058: 40360000000000000000 |     rmmovq %rbx, (%rsi)
0x062: 6087                 | 	addq %r8, %rdi
0x064: 6086                 |     addq %r8, %rsi
0x066: 6330                 |     xorq %rbx, %rax
0x068: 6121                 |     subq %rdx, %rcx
0x06a: 6211                 |     andq %rcx, %rcx
0x06c: 744c00000000000000   |     jne loop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x075:                      | Done:
0x075: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x076:                      | End:
                            | #/* $end ncopy-ys */
0x076:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x078:                      | 	.align 8
0x078:                      | src:
0x078: 0100000000000000     | 	.quad 1
0x080: 0200000000000000     | 	.quad 2
0x088: fdffffffffffffff     | 	.quad -3
0x090: fcffffffffffffff     | 	.quad -4
0x098: fbffffffffffffff     | 	.quad -5
0x0a0: 0600000000000000     | 	.quad 6
0x0a8: 0700000000000000     | 	.quad 7
0x0b0: 0800000000000000     | 	.quad 8
0x0b8: f7ffffffffffffff     | 	.quad -9
0x0c0: 0a00000000000000     | 	.quad 10
0x0c8: 0b00000000000000     | 	.quad 11
0x0d0: f4ffffffffffffff     | 	.quad -12
0x0d8: f3ffffffffffffff     | 	.quad -13
0x0e0: f2ffffffffffffff     | 	.quad -14
0x0e8: f1ffffffffffffff     | 	.quad -15
0x0f0: 1000000000000000     | 	.quad 16
0x0f8: efffffffffffffff     | 	.quad -17
0x100: 1200000000000000     | 	.quad 18
0x108: 1300000000000000     | 	.quad 19
0x110: ecffffffffffffff     | 	.quad -20
0x118: 1500000000000000     | 	.quad 21
0x120: 1600000000000000     | 	.quad 22
0x128: e9ffffffffffffff     | 	.quad -23
0x130: e8ffffffffffffff     | 	.quad -24
0x138: 1900000000000000     | 	.quad 25
0x140: 1a00000000000000     | 	.quad 26
0x148: e5ffffffffffffff     | 	.quad -27
0x150: e4ffffffffffffff     | 	.quad -28
0x158: 1d00000000000000     | 	.quad 29
0x160: e2ffffffffffffff     | 	.quad -30
0x168: e1ffffffffffffff     | 	.quad -31
0x170: 2000000000000000     | 	.quad 32
0x178: 2100000000000000     | 	.quad 33
0x180: 2200000000000000     | 	.quad 34
0x188: ddffffffffffffff     | 	.quad -35
0x190: 2400000000000000     | 	.quad 36
0x198: dbffffffffffffff     | 	.quad -37
0x1a0: 2600000000000000     | 	.quad 38
0x1a8: 2700000000000000     | 	.quad 39
0x1b0: 2800000000000000     | 	.quad 40
0x1b8: 2900000000000000     | 	.quad 41
0x1c0: d6ffffffffffffff     | 	.quad -42
0x1c8: d5ffffffffffffff     | 	.quad -43
0x1d0: d4ffffffffffffff     | 	.quad -44
0x1d8: 2d00000000000000     | 	.quad 45
0x1e0: 2e00000000000000     | 	.quad 46
0x1e8: d1ffffffffffffff     | 	.quad -47
0x1f0: 3000000000000000     | 	.quad 48
0x1f8: cfffffffffffffff     | 	.quad -49
0x200: ceffffffffffffff     | 	.quad -50
0x208: 3300000000000000     | 	.quad 51
0x210: 3400000000000000     | 	.quad 52
0x218: 3500000000000000     | 	.quad 53
0x220: 3600000000000000     | 	.quad 54
0x228: c9ffffffffffffff     | 	.quad -55
0x230: 3800000000000000     | 	.quad 56
0x238: c7ffffffffffffff     | 	.quad -57
0x240: c6ffffffffffffff     | 	.quad -58
0x248: c5ffffffffffffff     | 	.quad -59
0x250: c4ffffffffffffff     | 	.quad -60
0x258: c3ffffffffffffff     | 	.quad -61
0x260: c2ffffffffffffff     | 	.quad -62
0x268: c1ffffffffffffff     | 	.quad -63
0x270: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x280:                      | 	.align 16
0x280:                      | Predest:
0x280: fadebc0000000000     | 	.quad 0xbcdefa
0x288:                      | dest:
0x288: abefcd0000000000     | 	.quad 0xcdefab
0x290: abefcd0000000000     | 	.quad 0xcdefab
0x298: abefcd0000000000     | 	.quad 0xcdefab
0x2a0: abefcd0000000000     | 	.quad 0xcdefab
0x2a8: abefcd0000000000     | 	.quad 0xcdefab
0x2b0: abefcd0000000000     | 	.quad 0xcdefab
0x2b8: abefcd0000000000     | 	.quad 0xcdefab
0x2c0: abefcd0000000000     | 	.quad 0xcdefab
0x2c8: abefcd0000000000     | 	.quad 0xcdefab
0x2d0: abefcd0000000000     | 	.quad 0xcdefab
0x2d8: abefcd0000000000     | 	.quad 0xcdefab
0x2e0: abefcd0000000000     | 	.quad 0xcdefab
0x2e8: abefcd0000000000     | 	.quad 0xcdefab
0x2f0: abefcd0000000000     | 	.quad 0xcdefab
0x2f8: abefcd0000000000     | 	.quad 0xcdefab
0x300: abefcd0000000000     | 	.quad 0xcdefab
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480:                      | Postdest:
0x480: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x488:                      | .align 8
                            | # Run time stack
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
0x4d0: 0000000000000000     | 	.quad 0
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
0x4f0: 0000000000000000     | 	.quad 0
0x4f8: 0000000000000000     | 	.quad 0
0x500: 0000000000000000     | 	.quad 0
                            | 
0x508:                      | Stack:
