                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45001000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6a800000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f77800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | # 	xorq %rax,%rax		# count = 0;
                            | # 	andq %rdx,%rdx		# len <= 0?
                            | # 	jle Done		# if so, goto Done:
                            | 
                            | # Loop:	
                            | # 	mrmovq (%rdi), %r10	# read val from src...
                            | # 	rmmovq %r10, (%rsi)	# ...and store it to dst
                            | # 	andq %r10, %r10		# val <= 0?
                            | # 	jle Npos		# if so, goto Npos:
                            | # 	irmovq $1, %r10
                            | # 	addq %r10, %rax		# count++
                            | # Npos:	
                            | # 	irmovq $1, %r10
                            | # 	subq %r10, %rdx		# len--
                            | # 	irmovq $8, %r10
                            | # 	addq %r10, %rdi		# src++
                            | # 	addq %r10, %rsi		# dst++
                            | # 	andq %rdx,%rdx		# len > 0?
                            | # 	jg Loop			# if so, goto Loop:
                            | 
0x032: 6300                 |     xorq %rax, %rax
0x034: 2021                 |     rrmovq %rdx, %rcx
0x036: 6222                 |     andq %rdx, %rdx
0x038: 30f20100000000000000 |     irmovq $1, %rdx
0x042: 30f80800000000000000 |     irmovq $8, %r8
0x04c:                      | loop:
0x04c: 6333                 |     xorq %rbx, %rbx
0x04e: 50370000000000000000 |     mrmovq (%rdi), %rbx
                            | 	
0x058: 40360000000000000000 |     rmmovq %rbx, (%rsi)
0x062: 6087                 | 	addq %r8, %rdi
0x064: 6086                 |     addq %r8, %rsi
0x066: 6330                 |     xorq %rbx, %rax
0x068: 6121                 |     subq %rdx, %rcx
0x06a: 6211                 |     andq %rcx, %rcx
0x06c: 744c00000000000000   |     jne loop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x075:                      | Done:
0x075: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x076:                      | End:
                            | #/* $end ncopy-ys */
0x076:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x078:                      | 	.align 8
0x078:                      | src:
0x078: 0100000000000000     | 	.quad 1
0x080: 0200000000000000     | 	.quad 2
0x088: fdffffffffffffff     | 	.quad -3
0x090: fcffffffffffffff     | 	.quad -4
0x098: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x0a0:                      | 	.align 16
0x0a0:                      | Predest:
0x0a0: fadebc0000000000     | 	.quad 0xbcdefa
0x0a8:                      | dest:
0x0a8: abefcd0000000000     | 	.quad 0xcdefab
0x0b0: abefcd0000000000     | 	.quad 0xcdefab
0x0b8: abefcd0000000000     | 	.quad 0xcdefab
0x0c0: abefcd0000000000     | 	.quad 0xcdefab
0x0c8:                      | Postdest:
0x0c8: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x0d0:                      | .align 8
                            | # Run time stack
0x0d0: 0000000000000000     | 	.quad 0
0x0d8: 0000000000000000     | 	.quad 0
0x0e0: 0000000000000000     | 	.quad 0
0x0e8: 0000000000000000     | 	.quad 0
0x0f0: 0000000000000000     | 	.quad 0
0x0f8: 0000000000000000     | 	.quad 0
0x100: 0000000000000000     | 	.quad 0
0x108: 0000000000000000     | 	.quad 0
0x110: 0000000000000000     | 	.quad 0
0x118: 0000000000000000     | 	.quad 0
0x120: 0000000000000000     | 	.quad 0
0x128: 0000000000000000     | 	.quad 0
0x130: 0000000000000000     | 	.quad 0
0x138: 0000000000000000     | 	.quad 0
0x140: 0000000000000000     | 	.quad 0
0x148: 0000000000000000     | 	.quad 0
                            | 
0x150:                      | Stack:
